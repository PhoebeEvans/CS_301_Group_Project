// Generated by view binder compiler. Do not edit!
package com.example.maandparailroadapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.maandparailroadapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class UserManagementBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button deleteBtn;

  @NonNull
  public final Switch isAdmin;

  @NonNull
  public final Button newBtn;

  @NonNull
  public final Button searchBtn;

  @NonNull
  public final Button updateBtn;

  @NonNull
  public final EditText userProfileConfirmPassword;

  @NonNull
  public final EditText userProfileEmail;

  @NonNull
  public final EditText userProfileNewPassword;

  @NonNull
  public final TextView userProfileTitle;

  @NonNull
  public final EditText userProfileUsername;

  private UserManagementBinding(@NonNull ConstraintLayout rootView, @NonNull Button deleteBtn,
      @NonNull Switch isAdmin, @NonNull Button newBtn, @NonNull Button searchBtn,
      @NonNull Button updateBtn, @NonNull EditText userProfileConfirmPassword,
      @NonNull EditText userProfileEmail, @NonNull EditText userProfileNewPassword,
      @NonNull TextView userProfileTitle, @NonNull EditText userProfileUsername) {
    this.rootView = rootView;
    this.deleteBtn = deleteBtn;
    this.isAdmin = isAdmin;
    this.newBtn = newBtn;
    this.searchBtn = searchBtn;
    this.updateBtn = updateBtn;
    this.userProfileConfirmPassword = userProfileConfirmPassword;
    this.userProfileEmail = userProfileEmail;
    this.userProfileNewPassword = userProfileNewPassword;
    this.userProfileTitle = userProfileTitle;
    this.userProfileUsername = userProfileUsername;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static UserManagementBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static UserManagementBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.user_management, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static UserManagementBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.deleteBtn;
      Button deleteBtn = ViewBindings.findChildViewById(rootView, id);
      if (deleteBtn == null) {
        break missingId;
      }

      id = R.id.isAdmin;
      Switch isAdmin = ViewBindings.findChildViewById(rootView, id);
      if (isAdmin == null) {
        break missingId;
      }

      id = R.id.newBtn;
      Button newBtn = ViewBindings.findChildViewById(rootView, id);
      if (newBtn == null) {
        break missingId;
      }

      id = R.id.searchBtn;
      Button searchBtn = ViewBindings.findChildViewById(rootView, id);
      if (searchBtn == null) {
        break missingId;
      }

      id = R.id.updateBtn;
      Button updateBtn = ViewBindings.findChildViewById(rootView, id);
      if (updateBtn == null) {
        break missingId;
      }

      id = R.id.userProfileConfirmPassword;
      EditText userProfileConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (userProfileConfirmPassword == null) {
        break missingId;
      }

      id = R.id.userProfileEmail;
      EditText userProfileEmail = ViewBindings.findChildViewById(rootView, id);
      if (userProfileEmail == null) {
        break missingId;
      }

      id = R.id.userProfileNewPassword;
      EditText userProfileNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (userProfileNewPassword == null) {
        break missingId;
      }

      id = R.id.userProfileTitle;
      TextView userProfileTitle = ViewBindings.findChildViewById(rootView, id);
      if (userProfileTitle == null) {
        break missingId;
      }

      id = R.id.userProfileUsername;
      EditText userProfileUsername = ViewBindings.findChildViewById(rootView, id);
      if (userProfileUsername == null) {
        break missingId;
      }

      return new UserManagementBinding((ConstraintLayout) rootView, deleteBtn, isAdmin, newBtn,
          searchBtn, updateBtn, userProfileConfirmPassword, userProfileEmail,
          userProfileNewPassword, userProfileTitle, userProfileUsername);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
